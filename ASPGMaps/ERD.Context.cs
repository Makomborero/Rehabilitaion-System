//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASPGMaps
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class erd : DbContext
    {
        public erd()
            : base("name=erd")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<admin> admins { get; set; }
        public DbSet<category> categories { get; set; }
        public DbSet<exam> exams { get; set; }
        public DbSet<question> questions { get; set; }
        public DbSet<result> results { get; set; }
        public DbSet<subject> subjects { get; set; }
        public DbSet<userCategory> userCategories { get; set; }
        public DbSet<user> users { get; set; }
        public DbSet<usrdata> usrdatas { get; set; }
        public DbSet<vent> vents { get; set; }
        public DbSet<mp4_files> mp4_files { get; set; }
        public DbSet<pdf_files> pdf_files { get; set; }
        public DbSet<ppt_files> ppt_files { get; set; }
        public DbSet<TempHeart> TempHearts { get; set; }
    
        public virtual ObjectResult<Nullable<int>> getExamDuration(Nullable<int> exam_id)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getExamDuration", exam_idParameter);
        }
    
        public virtual int spAddEvent(string subject, string event_description, Nullable<System.DateTime> start_date)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var event_descriptionParameter = event_description != null ?
                new ObjectParameter("event_description", event_description) :
                new ObjectParameter("event_description", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddEvent", subjectParameter, event_descriptionParameter, start_dateParameter);
        }
    
        public virtual int spaddexam(string examname, string examdis, Nullable<System.DateTime> examdate, Nullable<int> examduration, Nullable<int> exampassmarks, Nullable<int> exammarks, Nullable<int> examsubjectfid, Nullable<int> examcategoryfid)
        {
            var examnameParameter = examname != null ?
                new ObjectParameter("examname", examname) :
                new ObjectParameter("examname", typeof(string));
    
            var examdisParameter = examdis != null ?
                new ObjectParameter("examdis", examdis) :
                new ObjectParameter("examdis", typeof(string));
    
            var examdateParameter = examdate.HasValue ?
                new ObjectParameter("examdate", examdate) :
                new ObjectParameter("examdate", typeof(System.DateTime));
    
            var examdurationParameter = examduration.HasValue ?
                new ObjectParameter("examduration", examduration) :
                new ObjectParameter("examduration", typeof(int));
    
            var exampassmarksParameter = exampassmarks.HasValue ?
                new ObjectParameter("exampassmarks", exampassmarks) :
                new ObjectParameter("exampassmarks", typeof(int));
    
            var exammarksParameter = exammarks.HasValue ?
                new ObjectParameter("exammarks", exammarks) :
                new ObjectParameter("exammarks", typeof(int));
    
            var examsubjectfidParameter = examsubjectfid.HasValue ?
                new ObjectParameter("examsubjectfid", examsubjectfid) :
                new ObjectParameter("examsubjectfid", typeof(int));
    
            var examcategoryfidParameter = examcategoryfid.HasValue ?
                new ObjectParameter("examcategoryfid", examcategoryfid) :
                new ObjectParameter("examcategoryfid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spaddexam", examnameParameter, examdisParameter, examdateParameter, examdurationParameter, exampassmarksParameter, exammarksParameter, examsubjectfidParameter, examcategoryfidParameter);
        }
    
        public virtual int spaddmp4(string course_fid, string name, string description, Nullable<System.DateTime> upload_date, string path)
        {
            var course_fidParameter = course_fid != null ?
                new ObjectParameter("course_fid", course_fid) :
                new ObjectParameter("course_fid", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var upload_dateParameter = upload_date.HasValue ?
                new ObjectParameter("upload_date", upload_date) :
                new ObjectParameter("upload_date", typeof(System.DateTime));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spaddmp4", course_fidParameter, nameParameter, descriptionParameter, upload_dateParameter, pathParameter);
        }
    
        public virtual int spaddpdf(string course_fid, string name, string description, Nullable<System.DateTime> upload_date, string path)
        {
            var course_fidParameter = course_fid != null ?
                new ObjectParameter("course_fid", course_fid) :
                new ObjectParameter("course_fid", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var upload_dateParameter = upload_date.HasValue ?
                new ObjectParameter("upload_date", upload_date) :
                new ObjectParameter("upload_date", typeof(System.DateTime));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spaddpdf", course_fidParameter, nameParameter, descriptionParameter, upload_dateParameter, pathParameter);
        }
    
        public virtual int spaddppt(string course_fid, string name, string description, Nullable<System.DateTime> upload_date, string path)
        {
            var course_fidParameter = course_fid != null ?
                new ObjectParameter("course_fid", course_fid) :
                new ObjectParameter("course_fid", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var upload_dateParameter = upload_date.HasValue ?
                new ObjectParameter("upload_date", upload_date) :
                new ObjectParameter("upload_date", typeof(System.DateTime));
    
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spaddppt", course_fidParameter, nameParameter, descriptionParameter, upload_dateParameter, pathParameter);
        }
    
        public virtual int spAddquestion(string questionname, string optionone, string optiontwo, string optionthree, string optionfour, Nullable<int> questionanswer, Nullable<int> examfid)
        {
            var questionnameParameter = questionname != null ?
                new ObjectParameter("questionname", questionname) :
                new ObjectParameter("questionname", typeof(string));
    
            var optiononeParameter = optionone != null ?
                new ObjectParameter("optionone", optionone) :
                new ObjectParameter("optionone", typeof(string));
    
            var optiontwoParameter = optiontwo != null ?
                new ObjectParameter("optiontwo", optiontwo) :
                new ObjectParameter("optiontwo", typeof(string));
    
            var optionthreeParameter = optionthree != null ?
                new ObjectParameter("optionthree", optionthree) :
                new ObjectParameter("optionthree", typeof(string));
    
            var optionfourParameter = optionfour != null ?
                new ObjectParameter("optionfour", optionfour) :
                new ObjectParameter("optionfour", typeof(string));
    
            var questionanswerParameter = questionanswer.HasValue ?
                new ObjectParameter("questionanswer", questionanswer) :
                new ObjectParameter("questionanswer", typeof(int));
    
            var examfidParameter = examfid.HasValue ?
                new ObjectParameter("examfid", examfid) :
                new ObjectParameter("examfid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddquestion", questionnameParameter, optiononeParameter, optiontwoParameter, optionthreeParameter, optionfourParameter, questionanswerParameter, examfidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spAdminlogin(string admin_email, string password)
        {
            var admin_emailParameter = admin_email != null ?
                new ObjectParameter("admin_email", admin_email) :
                new ObjectParameter("admin_email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spAdminlogin", admin_emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spAdminRegisterinsert(string admin_name, string admin_email, string password)
        {
            var admin_nameParameter = admin_name != null ?
                new ObjectParameter("admin_name", admin_name) :
                new ObjectParameter("admin_name", typeof(string));
    
            var admin_emailParameter = admin_email != null ?
                new ObjectParameter("admin_email", admin_email) :
                new ObjectParameter("admin_email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spAdminRegisterinsert", admin_nameParameter, admin_emailParameter, passwordParameter);
        }
    
        public virtual int spEditexam(Nullable<int> examid, string examname, string examdiscription, Nullable<System.DateTime> examdate, Nullable<int> examduration, Nullable<int> exampassmarks, Nullable<int> examnmarks, Nullable<int> categoryfid, Nullable<int> subjectfid)
        {
            var examidParameter = examid.HasValue ?
                new ObjectParameter("examid", examid) :
                new ObjectParameter("examid", typeof(int));
    
            var examnameParameter = examname != null ?
                new ObjectParameter("examname", examname) :
                new ObjectParameter("examname", typeof(string));
    
            var examdiscriptionParameter = examdiscription != null ?
                new ObjectParameter("examdiscription", examdiscription) :
                new ObjectParameter("examdiscription", typeof(string));
    
            var examdateParameter = examdate.HasValue ?
                new ObjectParameter("examdate", examdate) :
                new ObjectParameter("examdate", typeof(System.DateTime));
    
            var examdurationParameter = examduration.HasValue ?
                new ObjectParameter("examduration", examduration) :
                new ObjectParameter("examduration", typeof(int));
    
            var exampassmarksParameter = exampassmarks.HasValue ?
                new ObjectParameter("exampassmarks", exampassmarks) :
                new ObjectParameter("exampassmarks", typeof(int));
    
            var examnmarksParameter = examnmarks.HasValue ?
                new ObjectParameter("examnmarks", examnmarks) :
                new ObjectParameter("examnmarks", typeof(int));
    
            var categoryfidParameter = categoryfid.HasValue ?
                new ObjectParameter("categoryfid", categoryfid) :
                new ObjectParameter("categoryfid", typeof(int));
    
            var subjectfidParameter = subjectfid.HasValue ?
                new ObjectParameter("subjectfid", subjectfid) :
                new ObjectParameter("subjectfid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditexam", examidParameter, examnameParameter, examdiscriptionParameter, examdateParameter, examdurationParameter, exampassmarksParameter, examnmarksParameter, categoryfidParameter, subjectfidParameter);
        }
    
        public virtual ObjectResult<spEditexamfill_Result> spEditexamfill(Nullable<int> examid)
        {
            var examidParameter = examid.HasValue ?
                new ObjectParameter("examid", examid) :
                new ObjectParameter("examid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEditexamfill_Result>("spEditexamfill", examidParameter);
        }
    
        public virtual int spEditquestion(Nullable<int> questionid, string questionname, string optionone, string optiontwo, string optionthree, string optionfour, Nullable<int> questionanswer, Nullable<int> examfid)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(int));
    
            var questionnameParameter = questionname != null ?
                new ObjectParameter("questionname", questionname) :
                new ObjectParameter("questionname", typeof(string));
    
            var optiononeParameter = optionone != null ?
                new ObjectParameter("optionone", optionone) :
                new ObjectParameter("optionone", typeof(string));
    
            var optiontwoParameter = optiontwo != null ?
                new ObjectParameter("optiontwo", optiontwo) :
                new ObjectParameter("optiontwo", typeof(string));
    
            var optionthreeParameter = optionthree != null ?
                new ObjectParameter("optionthree", optionthree) :
                new ObjectParameter("optionthree", typeof(string));
    
            var optionfourParameter = optionfour != null ?
                new ObjectParameter("optionfour", optionfour) :
                new ObjectParameter("optionfour", typeof(string));
    
            var questionanswerParameter = questionanswer.HasValue ?
                new ObjectParameter("questionanswer", questionanswer) :
                new ObjectParameter("questionanswer", typeof(int));
    
            var examfidParameter = examfid.HasValue ?
                new ObjectParameter("examfid", examfid) :
                new ObjectParameter("examfid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditquestion", questionidParameter, questionnameParameter, optiononeParameter, optiontwoParameter, optionthreeParameter, optionfourParameter, questionanswerParameter, examfidParameter);
        }
    
        public virtual ObjectResult<spEditquestionfill_Result> spEditquestionfill(Nullable<int> questionid)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEditquestionfill_Result>("spEditquestionfill", questionidParameter);
        }
    
        public virtual int spEditUser(string user_id_number, string user_rank, string user_department, string usercategory, string user_fname, string user_lname, string user_username, string user_password, string user_gender, string user_dob, string user_force_number, string user_mobile, string user_email, string user_address, byte[] user_picture)
        {
            var user_id_numberParameter = user_id_number != null ?
                new ObjectParameter("user_id_number", user_id_number) :
                new ObjectParameter("user_id_number", typeof(string));
    
            var user_rankParameter = user_rank != null ?
                new ObjectParameter("user_rank", user_rank) :
                new ObjectParameter("user_rank", typeof(string));
    
            var user_departmentParameter = user_department != null ?
                new ObjectParameter("user_department", user_department) :
                new ObjectParameter("user_department", typeof(string));
    
            var usercategoryParameter = usercategory != null ?
                new ObjectParameter("usercategory", usercategory) :
                new ObjectParameter("usercategory", typeof(string));
    
            var user_fnameParameter = user_fname != null ?
                new ObjectParameter("user_fname", user_fname) :
                new ObjectParameter("user_fname", typeof(string));
    
            var user_lnameParameter = user_lname != null ?
                new ObjectParameter("user_lname", user_lname) :
                new ObjectParameter("user_lname", typeof(string));
    
            var user_usernameParameter = user_username != null ?
                new ObjectParameter("user_username", user_username) :
                new ObjectParameter("user_username", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            var user_genderParameter = user_gender != null ?
                new ObjectParameter("user_gender", user_gender) :
                new ObjectParameter("user_gender", typeof(string));
    
            var user_dobParameter = user_dob != null ?
                new ObjectParameter("user_dob", user_dob) :
                new ObjectParameter("user_dob", typeof(string));
    
            var user_force_numberParameter = user_force_number != null ?
                new ObjectParameter("user_force_number", user_force_number) :
                new ObjectParameter("user_force_number", typeof(string));
    
            var user_mobileParameter = user_mobile != null ?
                new ObjectParameter("user_mobile", user_mobile) :
                new ObjectParameter("user_mobile", typeof(string));
    
            var user_emailParameter = user_email != null ?
                new ObjectParameter("user_email", user_email) :
                new ObjectParameter("user_email", typeof(string));
    
            var user_addressParameter = user_address != null ?
                new ObjectParameter("user_address", user_address) :
                new ObjectParameter("user_address", typeof(string));
    
            var user_pictureParameter = user_picture != null ?
                new ObjectParameter("user_picture", user_picture) :
                new ObjectParameter("user_picture", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditUser", user_id_numberParameter, user_rankParameter, user_departmentParameter, usercategoryParameter, user_fnameParameter, user_lnameParameter, user_usernameParameter, user_passwordParameter, user_genderParameter, user_dobParameter, user_force_numberParameter, user_mobileParameter, user_emailParameter, user_addressParameter, user_pictureParameter);
        }
    
        public virtual int spEditUser2(string user_id_number, string user_rank, string user_department, string usercategory, string user_fname, string user_lname, string user_username, string user_password, string user_gender, string user_dob, string user_force_number, string user_mobile, string user_email, string user_address, byte[] user_picture)
        {
            var user_id_numberParameter = user_id_number != null ?
                new ObjectParameter("user_id_number", user_id_number) :
                new ObjectParameter("user_id_number", typeof(string));
    
            var user_rankParameter = user_rank != null ?
                new ObjectParameter("user_rank", user_rank) :
                new ObjectParameter("user_rank", typeof(string));
    
            var user_departmentParameter = user_department != null ?
                new ObjectParameter("user_department", user_department) :
                new ObjectParameter("user_department", typeof(string));
    
            var usercategoryParameter = usercategory != null ?
                new ObjectParameter("usercategory", usercategory) :
                new ObjectParameter("usercategory", typeof(string));
    
            var user_fnameParameter = user_fname != null ?
                new ObjectParameter("user_fname", user_fname) :
                new ObjectParameter("user_fname", typeof(string));
    
            var user_lnameParameter = user_lname != null ?
                new ObjectParameter("user_lname", user_lname) :
                new ObjectParameter("user_lname", typeof(string));
    
            var user_usernameParameter = user_username != null ?
                new ObjectParameter("user_username", user_username) :
                new ObjectParameter("user_username", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            var user_genderParameter = user_gender != null ?
                new ObjectParameter("user_gender", user_gender) :
                new ObjectParameter("user_gender", typeof(string));
    
            var user_dobParameter = user_dob != null ?
                new ObjectParameter("user_dob", user_dob) :
                new ObjectParameter("user_dob", typeof(string));
    
            var user_force_numberParameter = user_force_number != null ?
                new ObjectParameter("user_force_number", user_force_number) :
                new ObjectParameter("user_force_number", typeof(string));
    
            var user_mobileParameter = user_mobile != null ?
                new ObjectParameter("user_mobile", user_mobile) :
                new ObjectParameter("user_mobile", typeof(string));
    
            var user_emailParameter = user_email != null ?
                new ObjectParameter("user_email", user_email) :
                new ObjectParameter("user_email", typeof(string));
    
            var user_addressParameter = user_address != null ?
                new ObjectParameter("user_address", user_address) :
                new ObjectParameter("user_address", typeof(string));
    
            var user_pictureParameter = user_picture != null ?
                new ObjectParameter("user_picture", user_picture) :
                new ObjectParameter("user_picture", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditUser2", user_id_numberParameter, user_rankParameter, user_departmentParameter, usercategoryParameter, user_fnameParameter, user_lnameParameter, user_usernameParameter, user_passwordParameter, user_genderParameter, user_dobParameter, user_force_numberParameter, user_mobileParameter, user_emailParameter, user_addressParameter, user_pictureParameter);
        }
    
        public virtual ObjectResult<spExamList_Result> spExamList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExamList_Result>("spExamList");
        }
    
        public virtual ObjectResult<spExamListDetails_Result> spExamListDetails(Nullable<int> exam_id)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExamListDetails_Result>("spExamListDetails", exam_idParameter);
        }
    
        public virtual ObjectResult<spExamquestion_Result> spExamquestion(Nullable<int> examfid)
        {
            var examfidParameter = examfid.HasValue ?
                new ObjectParameter("examfid", examfid) :
                new ObjectParameter("examfid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExamquestion_Result>("spExamquestion", examfidParameter);
        }
    
        public virtual ObjectResult<spExamserachcategory_Result> spExamserachcategory(Nullable<int> subjectid)
        {
            var subjectidParameter = subjectid.HasValue ?
                new ObjectParameter("subjectid", subjectid) :
                new ObjectParameter("subjectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExamserachcategory_Result>("spExamserachcategory", subjectidParameter);
        }
    
        public virtual ObjectResult<spgetallquestion_Result> spgetallquestion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgetallquestion_Result>("spgetallquestion");
        }
    
        public virtual ObjectResult<spGetEvent_Result> spGetEvent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetEvent_Result>("spGetEvent");
        }
    
        public virtual ObjectResult<spGetStudentList_Result> spGetStudentList(string usercategory)
        {
            var usercategoryParameter = usercategory != null ?
                new ObjectParameter("usercategory", usercategory) :
                new ObjectParameter("usercategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStudentList_Result>("spGetStudentList", usercategoryParameter);
        }
    
        public virtual ObjectResult<spGetUserInfo_Result> spGetUserInfo(string user_username)
        {
            var user_usernameParameter = user_username != null ?
                new ObjectParameter("user_username", user_username) :
                new ObjectParameter("user_username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserInfo_Result>("spGetUserInfo", user_usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInsertNewUser(string user_id_number, string user_rank, string user_department, string usercategory, string user_fname, string user_lname, string user_username, string user_password, string user_gender, string user_dob, string user_force_number, string user_mobile, string user_email, string user_address, byte[] user_picture)
        {
            var user_id_numberParameter = user_id_number != null ?
                new ObjectParameter("user_id_number", user_id_number) :
                new ObjectParameter("user_id_number", typeof(string));
    
            var user_rankParameter = user_rank != null ?
                new ObjectParameter("user_rank", user_rank) :
                new ObjectParameter("user_rank", typeof(string));
    
            var user_departmentParameter = user_department != null ?
                new ObjectParameter("user_department", user_department) :
                new ObjectParameter("user_department", typeof(string));
    
            var usercategoryParameter = usercategory != null ?
                new ObjectParameter("usercategory", usercategory) :
                new ObjectParameter("usercategory", typeof(string));
    
            var user_fnameParameter = user_fname != null ?
                new ObjectParameter("user_fname", user_fname) :
                new ObjectParameter("user_fname", typeof(string));
    
            var user_lnameParameter = user_lname != null ?
                new ObjectParameter("user_lname", user_lname) :
                new ObjectParameter("user_lname", typeof(string));
    
            var user_usernameParameter = user_username != null ?
                new ObjectParameter("user_username", user_username) :
                new ObjectParameter("user_username", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            var user_genderParameter = user_gender != null ?
                new ObjectParameter("user_gender", user_gender) :
                new ObjectParameter("user_gender", typeof(string));
    
            var user_dobParameter = user_dob != null ?
                new ObjectParameter("user_dob", user_dob) :
                new ObjectParameter("user_dob", typeof(string));
    
            var user_force_numberParameter = user_force_number != null ?
                new ObjectParameter("user_force_number", user_force_number) :
                new ObjectParameter("user_force_number", typeof(string));
    
            var user_mobileParameter = user_mobile != null ?
                new ObjectParameter("user_mobile", user_mobile) :
                new ObjectParameter("user_mobile", typeof(string));
    
            var user_emailParameter = user_email != null ?
                new ObjectParameter("user_email", user_email) :
                new ObjectParameter("user_email", typeof(string));
    
            var user_addressParameter = user_address != null ?
                new ObjectParameter("user_address", user_address) :
                new ObjectParameter("user_address", typeof(string));
    
            var user_pictureParameter = user_picture != null ?
                new ObjectParameter("user_picture", user_picture) :
                new ObjectParameter("user_picture", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInsertNewUser", user_id_numberParameter, user_rankParameter, user_departmentParameter, usercategoryParameter, user_fnameParameter, user_lnameParameter, user_usernameParameter, user_passwordParameter, user_genderParameter, user_dobParameter, user_force_numberParameter, user_mobileParameter, user_emailParameter, user_addressParameter, user_pictureParameter);
        }
    
        public virtual ObjectResult<spLoadMp4Files_Result> spLoadMp4Files()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLoadMp4Files_Result>("spLoadMp4Files");
        }
    
        public virtual ObjectResult<spLoadpdffiles_Result> spLoadpdffiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLoadpdffiles_Result>("spLoadpdffiles");
        }
    
        public virtual ObjectResult<spLoadpptfiles_Result> spLoadpptfiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLoadpptfiles_Result>("spLoadpptfiles");
        }
    
        public virtual ObjectResult<spQuestionserachexam_Result> spQuestionserachexam(Nullable<int> examid)
        {
            var examidParameter = examid.HasValue ?
                new ObjectParameter("examid", examid) :
                new ObjectParameter("examid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spQuestionserachexam_Result>("spQuestionserachexam", examidParameter);
        }
    
        public virtual int spResultinsert(string examfid, string resultstatus, Nullable<int> resultscore, Nullable<int> totalquestion, string username, Nullable<System.DateTime> examdate)
        {
            var examfidParameter = examfid != null ?
                new ObjectParameter("examfid", examfid) :
                new ObjectParameter("examfid", typeof(string));
    
            var resultstatusParameter = resultstatus != null ?
                new ObjectParameter("resultstatus", resultstatus) :
                new ObjectParameter("resultstatus", typeof(string));
    
            var resultscoreParameter = resultscore.HasValue ?
                new ObjectParameter("resultscore", resultscore) :
                new ObjectParameter("resultscore", typeof(int));
    
            var totalquestionParameter = totalquestion.HasValue ?
                new ObjectParameter("totalquestion", totalquestion) :
                new ObjectParameter("totalquestion", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var examdateParameter = examdate.HasValue ?
                new ObjectParameter("examdate", examdate) :
                new ObjectParameter("examdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spResultinsert", examfidParameter, resultstatusParameter, resultscoreParameter, totalquestionParameter, usernameParameter, examdateParameter);
        }
    
        public virtual int spSubjectedit(string subject_name, Nullable<int> category_id, Nullable<int> subject_id)
        {
            var subject_nameParameter = subject_name != null ?
                new ObjectParameter("subject_name", subject_name) :
                new ObjectParameter("subject_name", typeof(string));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var subject_idParameter = subject_id.HasValue ?
                new ObjectParameter("subject_id", subject_id) :
                new ObjectParameter("subject_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSubjectedit", subject_nameParameter, category_idParameter, subject_idParameter);
        }
    
        public virtual ObjectResult<spSubjecteditfill_Result> spSubjecteditfill(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSubjecteditfill_Result>("spSubjecteditfill", idParameter);
        }
    
        public virtual ObjectResult<spSubjectList_Result> spSubjectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSubjectList_Result>("spSubjectList");
        }
    
        public virtual ObjectResult<spUserresult_Result> spUserresult(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUserresult_Result>("spUserresult", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spUserslogin(string user_email, string password)
        {
            var user_emailParameter = user_email != null ?
                new ObjectParameter("user_email", user_email) :
                new ObjectParameter("user_email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUserslogin", user_emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spUsersRegisterinsert(string user_fname, string user_lname, string email, string password)
        {
            var user_fnameParameter = user_fname != null ?
                new ObjectParameter("user_fname", user_fname) :
                new ObjectParameter("user_fname", typeof(string));
    
            var user_lnameParameter = user_lname != null ?
                new ObjectParameter("user_lname", user_lname) :
                new ObjectParameter("user_lname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUsersRegisterinsert", user_fnameParameter, user_lnameParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spUsrLogin(string usercategory, string user_username, string user_password)
        {
            var usercategoryParameter = usercategory != null ?
                new ObjectParameter("usercategory", usercategory) :
                new ObjectParameter("usercategory", typeof(string));
    
            var user_usernameParameter = user_username != null ?
                new ObjectParameter("user_username", user_username) :
                new ObjectParameter("user_username", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUsrLogin", usercategoryParameter, user_usernameParameter, user_passwordParameter);
        }
    }
}
